{
  "id": "357f0f72-a921-4c0f-9354-6621f982e336",
  "prefix": "qss",
  "description": "Search query store by query text. Return plans & aggregated runtime stats.",
  "body": "-- fuzzy match sql_text in query store\r\n-- if an RO replica exists, execute there avoid polluting query_store_query_text\r\n\r\ndrop table if exists #qs_stats;\r\n\r\n-- find query in query store\r\nselect\r\n    q.query_id,\r\n    qt.query_text_id,\r\n    q.last_execution_time,\r\n    qt.query_sql_text,\r\n    q.query_hash,\r\n    q.query_parameterization_type_desc,\r\n    q.initial_compile_start_time,\r\n    q.last_compile_start_time,\r\n    q.last_compile_batch_sql_handle,\r\n    q.count_compiles,\r\n    round(q.avg_compile_duration, 2) as avg_compile_duration, -- https://stackoverflow.com/a/1262571/4709762\r\n    q.last_compile_memory_kb,\r\n    q.max_compile_memory_kb\r\ninto #qs_stats\r\nfrom sys.query_store_query as q\r\ninner join sys.query_store_query_text as qt on q.query_text_id = qt.query_text_id\r\nwhere qt.query_sql_text like '%%'\r\n    --and qt.query_sql_text like '%%'\r\n;\r\n\r\nselect *\r\nfrom #qs_stats;\r\n\r\n/*\r\nquery_id(s):\r\n- \r\n- \r\n*/\r\ngo\r\ndrop table if exists #qs_agg;\r\n\r\n-- run counts for all plans\r\n-- strips tz from start_time (always utc) \r\n--   to something you can use in Excel\r\nselect\r\n    s.query_id,\r\n    convert(datetime2(0), rsi.start_time) as start_datetime_utc,\r\n    sum(rs.count_executions) as count_executions,\r\n    round(avg(rs.avg_cpu_time) / 1e6, 2) as avg_cpu_time_sec,\r\n    round(avg(rs.avg_duration) / 1e6, 2) as avg_duration_sec,\r\n    round(sum(rs.avg_cpu_time * rs.count_executions) / 1e6, 2) as total_cpu_time_sec\r\ninto #qs_agg\r\nfrom sys.query_store_runtime_stats as rs\r\njoin sys.query_store_runtime_stats_interval as rsi on rsi.runtime_stats_interval_id = rs.runtime_stats_interval_id\r\njoin sys.query_store_plan as p on p.plan_id = rs.plan_id\r\njoin #qs_stats as s on s.query_id = p.query_id\r\ngroup by \r\n    s.query_id,\r\n    rsi.start_time\r\n;\r\n\r\nselect\r\n    a.*,\r\n    s.*\r\nfrom #qs_stats as s\r\njoin #qs_agg as a on a.query_id = s.query_id\r\norder by a.start_datetime_utc desc;\r\ngo\r\n"
}