{
  "id": "a6dc67e0-32fb-412c-80fa-c52453a9ef9c",
  "prefix": "pflr",
  "description": "partitioning details with left-right helpers",
  "body": "-- http://sqlity.net/en/2483/partition-boundaries/\ndeclare @obj sysname = '$CURSOR$';\n\nwith as_text as (\n    select \n        function_id \n        ,boundary_id \n        ,parameter_id \n        ,[value] \n        ,data_type = convert(varchar(50),sql_variant_property([value],'BaseType'))\n        ,t_val = isnull(\n            case \n                when convert(varchar(50),sql_variant_property([value],'BaseType')) like '%date%'\n                    then format(try_cast([value] as date),'yyyy-MM-dd')\n                when convert(varchar(50),sql_variant_property([value],'BaseType')) like '%int%' \n                  or convert(varchar(50),sql_variant_property([value],'BaseType')) in ('money','smallmoney','decimal','numeric','float','real')\n                    then format(try_cast([value] as int),'#,###') \n                else try_cast([value] as varchar(50))\n            end, 'INF' )\n    from sys.partition_range_values\n), size_by_part as (\n    select \n        file_group_name = f.[name],\n        p.partition_number,\n        size_mb = convert(decimal(10,2),(sum(au.total_pages) * 8192.)/power(1024.,2))\n    from sys.partitions p\n    join sys.allocation_units au on p.hobt_id = au.container_id \n    join sys.filegroups f on au.data_space_id = f.data_space_id\n    where p.[object_id] = object_id(@obj)\n    group by f.[name],\n        p.partition_number\n)\nselect distinct -- allocation units blows it up ~*3\n    sbp.size_mb,\n    file_group_name = f.[name],\n    table_schema = schema_name(t.[schema_id]),\n    table_name = t.[name],\n    p.partition_number,\n    range_desc = left_prv.t_val\n                 +iif(pf.boundary_value_on_right=0,' < ',' <= ')\n                 +'X'\n                 +iif(pf.boundary_value_on_right=0,' <= ',' < ')\n                 +right_prv.t_val,\n    range_side=iif(pf.[type]='R','>> RIGHT >>','<< LEFT <<'),\n    partition_schem_name = ps.[name],\n    partition_function_name = pf.[name],\n    left_boundary = convert(date,left_prv.[value]),\n    p.[rows],\n    right_boundary = convert(date,right_prv.[value])\n    --,p.*\n    --,au.*\nfrom sys.partitions p\njoin sys.tables t on p.[object_id] = t.[object_id]\njoin sys.indexes i \n    on p.[object_id] = i.[object_id]\n    and p.index_id = i.index_id\njoin sys.allocation_units au on p.hobt_id = au.container_id \n    -- https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-allocation-units-transact-sql\n    --on (p.hobt_id = au.container_id and au.[type] in (1,3))\n    --or (p.[partition_id] = au.container_id and au.[type] =2)\njoin sys.filegroups f on au.data_space_id = f.data_space_id\nleft join sys.partition_schemes ps on ps.data_space_id = i.data_space_id\nleft join sys.partition_functions pf on ps.function_id = pf.function_id\nleft join as_text left_prv \n    on left_prv.function_id = ps.function_id\n    and left_prv.boundary_id + 1 = p.partition_number\nleft join as_text right_prv \n    on right_prv.function_id = ps.function_id\n    and right_prv.boundary_id = p.partition_number\nfull join size_by_part sbp \n    on sbp.partition_number = p.partition_number\n    and sbp.file_group_name = f.[name]\nwhere p.[object_id] = object_id(@obj)\n    and i.index_id = 1\norder by p.partition_number;"
}