{
  "id": "22804c03-f8b9-45c6-87b7-b263f413f9db",
  "prefix": "rcbr",
  "description": "Rowcout-by-range (timeseries) for 2 arbitrary tables",
  "body": "\ncreate or alter proc #getRowCountForRange\n     @start     datetime2(3)\n    ,@end       datetime2(3)\n    ,@method    varchar(11) = 'PARTITIONS' -- 'COUNT_STAR'\n    ,@rc_a      bigint      output\n    ,@rc_b      bigint      output\n    ,@size_mb_a float       output\n    ,@size_mb_b float       output\nas \nbegin;\n    \n    if @method = 'PARTITIONS'\n    begin;\n\t\t\n\t\tselect \n\t\t     @rc_a = sum(iif(s.index_id in (0,1),s.row_count,0))\n\t\t    ,@size_mb_a = sum(s.used_page_count*8192.)/power(1024.,2)\n\t\tfrom sys.dm_db_partition_stats s\n\t\tjoin sys.partitions p on p.[partition_id] = s.[partition_id]\n\t\tjoin sys.indexes i \n\t\t    on p.[object_id] = i.[object_id]\n\t\t    and p.index_id = i.index_id\n\t\tleft join sys.partition_schemes ps on ps.data_space_id = i.data_space_id\n\t\tjoin sys.partition_functions pf on pf.function_id = ps.function_id\n\t\tjoin sys.partition_range_values prv\n\t\t    on prv.boundary_id = s.partition_number\n\t\t    and prv.function_id = pf.function_id\n\t\twhere s.[object_id] = object_id('$table_a$')\n\t\t    and sql_variant_property(prv.[value],'BaseType') = '$partition_data_type$'\n\t\t\tand try_cast(prv.[value] as $partition_data_type$$precision_scale$) = @start;\n\n\t\tselect \n\t\t     @rc_b = sum(iif(s.index_id in (0,1),s.row_count,0))\n\t\t    ,@size_mb_b = sum(s.used_page_count*8192.)/power(1024.,2)\n\t\tfrom sys.dm_db_partition_stats s\n\t\tjoin sys.partitions p on p.[partition_id] = s.[partition_id]\n\t\tjoin sys.indexes i \n\t\t    on p.[object_id] = i.[object_id]\n\t\t    and p.index_id = i.index_id\n\t\tleft join sys.partition_schemes ps on ps.data_space_id = i.data_space_id\n\t\tjoin sys.partition_functions pf on pf.function_id = ps.function_id\n\t\tjoin sys.partition_range_values prv\n\t\t    on prv.boundary_id = s.partition_number\n\t\t    and prv.function_id = pf.function_id\n\t\twhere s.[object_id] = object_id('$table_b$')\n\t\t    and sql_variant_property(prv.[value],'BaseType') = '$partition_data_type$'\n\t\t\tand try_cast(prv.[value] as $partition_data_type$$precision_scale$) = @start;\n    end;\n    \n    if @method = 'COUNT_STAR'\n    begin\n        select @rc_a = count_big(*) \n        from $table_a$\n        where $column_a$ >= @start \n            and $column_a$  < @end;\n\n        select @rc_b = count_big(*) \n        from $table_b$ \n        where $column_b$ >= @start \n            and $column_b$ < @end;\n    end\nend;\ngo\n\nset nocount on;\n--set lock_timeout 1000;\n--set xact_abort on;\n\ndrop table if exists ##range_$MACHINE$;\ncreate table ##range_$MACHINE$ (\n     _start          datetime2(3) not null primary key\n    ,_end            datetime2(3) not null unique\n    ,check (_start < _end)\n    ,row_count_a     int\n    ,row_count_b     int\n    ,size_mb_a       decimal(10,2)\n    ,size_mb_b       decimal(10,2)\n    ,is_range_closed bit not null default 0 -- allow for stop/restart\n    ,dt_upd          datetime2(3)\n);\n\ninsert ##range_$MACHINE$(_start, _end)\nexec ('select start_dt, end_dt from ##batch_bounds_$MACHINE$;');\n-- select * from ##range_$MACHINE$\n\ndeclare \n     @start        datetime2(3)\n    ,@end          datetime2(3)\n    ,@row_count_a  bigint\n    ,@row_count_b  bigint\n    ,@size_mb_a    float\n    ,@size_mb_b    float\n    ,@loop_num_cur int = 0\n    ,@loop_num_all int\n    ,@msg          nvarchar(4000);\n\n/*\nexec dbo.#getRowCountForRange \n     @start = '2013-01-01'\n    ,@end   = '2013-02-01'\n    ,@method = 'COUNT_STAR'\n    ,@rc_a  = @row_count_a out\n    ,@rc_b  = @row_count_b out\n    ,@size_mb_a = @size_mb_a out\n    ,@size_mb_b = @size_mb_b out; \n\nselect\n\t row_count_a = @row_count_a\n    ,row_count_b = @row_count_b\n    ,size_mb_a   = @size_mb_a\n    ,size_mb_b   = @size_mb_b\n    ,is_range_closed = 1\n*/\nbegin \n\tselect @loop_num_all = count(*) from ##range_VGD18559;\n\n\tdeclare crs_RC cursor for\n\t    select _start,_end \n\t    from ##range_$MACHINE$ \n\t    where is_range_closed=0;\n\t\n\topen crs_RC;\n\t\n\tfetch next from crs_RC into @start, @end\n\t\n\twhile @@fetch_status = 0\n\tbegin;\n\t\tselect @loop_num_cur += 1;\n\t    set @msg = convert(varchar,getutcdate(),126)+': '+formatmessage('Interating loop [%i] of [%i].',@loop_num_cur,@loop_num_all);\n\t    raiserror(@msg,0,0) with nowait;\n\t    \n\t    declare @rc_a bigint\n\t       ,@rc_b     bigint;\n\t    \n\t    exec dbo.#getRowCountForRange\n\t\t\t$method$@method = 'PARTITIONS',\n\t        @start = @start\n\t       ,@end   = @end\n\t       ,@rc_a  = @row_count_a out\n\t       ,@rc_b  = @row_count_b out\n\t       ,@size_mb_a = @size_mb_a out\n\t       ,@size_mb_b = @size_mb_b out; \n\t    \n\t\n\t    update ##range_$MACHINE$ set\n\t         row_count_a = @row_count_a\n\t        ,row_count_b = @row_count_b\n\t        ,size_mb_a   = @size_mb_a\n\t        ,size_mb_b   = @size_mb_b\n\t        ,is_range_closed = 1\n\t        ,dt_upd      = getutcdate() \n\t    where current of crs_RC;\n\t\n\t    fetch next from crs_RC into @start, @end;\n\t\n\tend;\n\t \n\tclose crs_RC;\n\tdeallocate crs_RC;\nend;\n\nselect \n    _start\n   ,_end\n   ,row_count_a as [row_count_PageEvent.PageEvent] \n   ,row_count_b as [row_count_PageEvent.PageEvent_new] \n   ,size_mb_a   as [size_mb_PageEvent.PageEvent]\n   ,size_mb_b   as [size_mb_PageEvent.PageEvent_new]   \n   ,is_range_closed\n   ,dt_upd\nfrom ##range_VGD18559;\n\n",
  "placeholders": [
    {
      "name": "table_a",
      "defaultValue": ""
    },
    {
      "name": "table_b",
      "defaultValue": ""
    },
    {
      "name": "partition_data_type",
      "defaultValue": "datetime2"
    },
    {
      "name": "precision_scale",
      "defaultValue": ""
    },
    {
      "name": "method",
      "defaultValue": "-- "
    },
    {
      "name": "column_a",
      "defaultValue": ""
    },
    {
      "name": "column_b",
      "defaultValue": ""
    }
  ]
}